以乘2的方式找中点，不断做乘法直到找到最终结果，这一过程类似于从一颗二叉树的顶部走到底部
这颗二叉树以数组的形式表示，
若二分搜索从i=1开始，x[1]代表数组中值，x[2]代表第一个四分位值，x[3]代表第三个四分位值...

那么如何从一个有序数组a构造出这样的二叉树b呢？
可以先将a的奇数位元素按序放入b的后半部分，
a中模4余2位置的元素放到b中剩余部分的后半部分...

最终在O(n)时间内构造出了所需的二叉树，可以发现这颗二叉树的中序遍历结果正是a
